C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MODE
OBJECT MODULE PLACED IN .\Obj\mode.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\kernel\System\mode.c OPTIMIZE(9,SPEED) BROWSE INCDIR(..\KERNEL\SYSTEM
                    -\INC;..\KERNEL\SCALER\INC;..\DRIVER\extDEVICE\INC;..\LIB\INC;..\PANEL\INC;..\UI\BOARD;..\UI\INC;..\UI\MODEL;..\DRIVER\IN
                    -C;..\Customer) DEFINE(ModelName=TSUMXX9_DEMO) DEBUG OBJECTEXTEND PRINT(.\List\mode.lst) TABS(2) OBJECT(.\Obj\mode.obj)

line level    source

   1          #define _MODE_C_
   2          #include <math.h>
   3          #include "types.h"
   4          #include "Board.h"
   5          #include "mode.h"
   6          #include "global.h"
   7          
   8          #include "MS_reg.h"
   9          #include "MS_rwreg.h"
  10          #include "detect.h"
  11          #include "Misc.h"
  12          #include "drvadc.h"
  13          #include "AutoFunc.h"
  14          #include "common.h"
  15          //#include "halRwreg.h"
  16           #if ENABLE_DP_INPUT
              #include "drvDPRxApp.h"
              #endif
  19          #if ENABLE_FREESYNC
              #include "ComboApp.h"
              #endif
  22          
  23          #define MODE_DEBUG    1
  24          #if ENABLE_DEBUG&&MODE_DEBUG
  25              #define MODE_printData(str, value)   printData(str, value)
  26              #define MODE_printMsg(str)           printMsg(str)
  27          #else
                  #define MODE_printData(str, value)
                  #define MODE_printMsg(str)
              #endif
  31          
  32          extern BYTE mStar_GetInputStatus( void );
  33          
  34          #define SIMILAR_TIMING_BUFFER_MAX   10
  35          BYTE xdata ucSimilarTimingNums;
  36          BYTE xdata ucSimilarTimingBuffer[SIMILAR_TIMING_BUFFER_MAX]; // record similar timing buffer
  37          
  38          
  39          //=====================================================================================
  40          InputResolutionType code StandardModeResolution[] =
  41          {
  42              { 640,  350},  // Res_640x350,
  43              { 640,  400},  // Res_640x400,
  44              { 720,  400},  // Res_720x400,
  45              { 640,  480},  // Res_640x480,
  46              //  { 720,  483},  //Res_720x483,
  47              {700,   570},//Res_700x570
  48              { 720,  576},  //Res_720x576,
  49              { 800,  600},  // Res_800x600,
  50              { 832,  624},  // Res_832x624,
  51              { 884,  930},  // Res_884x930,
  52              {1024,  768},  // Res_1024x768,
  53              {1280, 1024},  // Res_1280x1024,
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 2   

  54              {1600, 1200},  // Res_1600x1200,
  55              {1152,  864},  // Res_1152x864,
  56              {1152,  870},  // Res_1152x870,
  57              {1152,  900}, // RES_1152x900,
  58              {1280,  720},  // Res_1280x720,
  59              {1280,  960},  // Res_1280x960,
  60              { 720,  480},  // Res_720x240
  61              { 800,  1209}, // Res_800x1209
  62              {1792,  1344}, // Res_1792x1344
  63              {1400,  1050}, // Res_1400x1050
  64              {1920,  1080}, // Res_1920x1080
  65              {1920,  1200}, // Res_1920x1200
  66              {848,    480}, // Res_848x480
  67              {1280,   768}, // Res_1280x768
  68              {1360,   768}, // Res_1360x768
  69              {1366,   768}, // Res_1366x768
  70              {1440,   900}, // Res1440x900
  71              {1680,  1050}, // Res_1680x1050
  72              {1280,   800}, // Res_1280x800
  73              {1600,   900}, // Res_1600x900
  74              {2560,  1600}, // Res_2560x1600
  75            {2560,  1440}, // Res_2560x1440
  76              #if _3D_TIMING
                  {1920,   2160}, //Res_1920x2160
                  {1280, 1440},//Res_1280x720P_FP
                  #endif
  80          };
  81          
  82          InputModeType code StandardMode[] =
  83          {
  84          #if 1//PANEL_WIDTH==1600&&PANEL_HEIGHT==900     //110919 Rick modified - A030
  85              // 1600x900 60Hz(VESA)
  86              {
  87                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
  88                  Res_1600x900, // ResIndex
  89                  600, 600, // HFreq, VFreq
  90                  1800, 1000,// HTotal, VTotal
  91                  176 - 6, 99 - 3 - 1, // HStart, VStart
  92              },
  93              // 1600x900 60Hz
  94              {
  95                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
  96                  Res_1600x900, // ResIndex
  97                  559, 600, // HFreq, VFreq
  98                  2128, 932,// HTotal, VTotal
  99                  176, 99,       // HStart, VStart
 100              },
 101              // 1600x900 60Hz(VESA)
 102              {
 103                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 104                  Res_1600x900, // ResIndex
 105                  555, 600, // HFreq, VFreq
 106                  1760, 926,// HTotal, VTotal
 107                  112 - 6, 23 - 5 - 1, // HStart, VStart
 108              },
 109          #endif
 110          #if 1//PANEL_WIDTH==1366&&PANEL_HEIGHT==768
 111              // 0.1366x768 60Hz Normal Blanking(VESA)
 112              {
 113                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,
 114                  Res_1366x768, // ResIndex
 115                  477, 598, // HFreq, VFreq
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 3   

 116                  1792, 798, // HTotal, VTotal
 117                  356 - 6, 27 - 3 - 1, // HStart, VStart
 118              },
 119              // 1. 1360X768 60Hz(VESA)
 120              {
 121                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,
 122                  Res_1360x768, // ResIndex
 123                  477, 600, // HFreq, VFreq
 124                  1792, 795 - 1, // HTotal, VTotal
 125                  368 - 5 - 3, 24 - 6 - 1, // HStart, VStart
 126              },
 127          #endif
 128          
 129            // 1080p 75hz
 130              {
 131                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,
 132                  Res_1920x1080, // ResIndex
 133                  837, 749, // HFreq, VFreq
 134                  2100,1110, // HTotal, VTotal
 135                  202, 32, // HStart, VStart
 136              },
 137          
 138              //  0  // 2. 848X480 60HZ
 139              {
 140                  SyncHpVp, // Flags
 141                  Res_848x480, // ResIndex
 142                  310, 600, // HFreq, VFreq
 143                  1088, 517, // HTotal, VTotal
 144                  224 - 5, 31 - 8 - 1, // HStart, VStart
 145              },
 146              // 1    // 3. 848X480 75HZ (CVT)
 147              {
 148                  SyncHnVp,   // Flags
 149                  Res_848x480, // ResIndex
 150                  377, 748, // HFreq, VFreq
 151                  1088, 504, // HTotal, VTotal
 152                  200 - 5, 21 - 5 - 1, // HStart, VStart
 153              },
 154              
 155              // 2// 4.1280X768 60Hz Reduced Blanking(VESA)
 156              {
 157                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 158                  Res_1280x768, // ResIndex
 159                  474, 599, // HFreq, VFreq
 160                  1440, 790, // HTotal, VTotal
 161                  //112 - 5, 19 - 7 - 1, // HStart, VStart
 162                  //JOVE ADD FOR CEHUA 1440*900
 163                  //132 - 5, 19 - 7 - 1, // HStart, VStart
 164                  //JOVE ADD FOR CEHUA 1280*800
 165                  102 - 5, 19 - 7 - 1, // HStart, VStart
 166              },
 167              // 3 // 5.1280X768 60Hz Normal Blanking(VESA)
 168              {
 169                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 170                  Res_1280x768, // ResIndex
 171                  477, 598, // HFreq, VFreq
 172                  1664, 798, // HTotal, VTotal
 173                  //320 - 5, 27 - 7 - 1, // HStart, VStart
 174                  //JOVE ADD FOR CEHUA
 175                  //340 - 5, 27 - 7 - 1, // HStart, VStart
 176                  //JOVE ADD FOR CEHUA 1280*800
 177                  310 - 5, 27 - 7 - 1, // HStart, VStart
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 4   

 178              },
 179              // 4 // 6.1280X768 75Hz(VESA)
 180              {
 181                  SyncHnVp, // Flags
 182                  Res_1280x768, // ResIndex
 183                  603, 748, // HFreq, VFreq
 184                  1696, 805, // HTotal, VTotal
 185                  //336 - 7, 34 - 7 - 1, // HStart, VStart
 186                  //JOVE ADD FOR CEHUA
 187                  //356 - 7, 34 - 7 - 1, // HStart, VStart
 188                  //JOVE ADD FOR CEHUA 1280*800
 189                  326 - 7, 34 - 7 - 1, // HStart, VStart
 190              },
 191              // 5 // 7.1280X768 85HZ(VESA)
 192              {
 193                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 194                  Res_1280x768, // ResIndex
 195                  686, 848, // HFreq, VFreq
 196                  1712, 809, // HTotal, VTotal
 197                  352 - 6, 38 - 7 - 1, // HStart, VStart
 198              },
 199              
 200              // 6 // 8. 1280x960 60Hz
 201              {
 202                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,
 203                  Res_1280x960, // ResIndex
 204                  600, 600, // HFreq, VFreq
 205                  1696, 996, //1800, 1000, // HTotal, VTotal
 206                  424, 39, // HStart, VStart
 207              },
 208              // 7 // 9. 1280x960 60Hz (VESA)
 209              {
 210                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,
 211                  Res_1280x960, // ResIndex
 212                  600, 600, // HFreq, VFreq
 213                  1800, 1000, // HTotal, VTotal
 214                  424 - 5, 39 - 3 - 1, // HStart, VStart
 215              },
 216              // 8 // 10. 1280x960 70Hz (Tune For PC)
 217              {
 218                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 219                  Res_1280x960, // ResIndex
 220                  700, 700, // HFreq, VFreq
 221                  1728, 1000, // HTotal, VTotal
 222                  354, 34, // HStart, VStart
 223              },
 224              // 9 // 11. 1280x960 72Hz(Tune For PC)
 225              {
 226                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn , // Flags
 227                  Res_1280x960, // ResIndex
 228                  723, 722, // HFreq, VFreq
 229                  1728, 1002,//1728, 1001, // HTotal, VTotal
 230                  354, 36, // HStart, VStart
 231              },
 232              // 10 // 12. 1280x960 75Hz
 233              {
 234                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 235                  Res_1280x960, // ResIndex
 236                  750, 750, // HFreq, VFreq
 237                  1728, 1002,//1680, 1000, // HTotal, VTotal
 238                  360 - 5, 39 - 3 - 1, // HStart, VStart
 239              },
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 5   

 240              // 11 // 13. 1280x960 85Hz (VESA)
 241              {
 242                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 243                  Res_1280x960, // ResIndex
 244                  859, 850, // HFreq, VFreq
 245                  1728, 1011, // HTotal, VTotal
 246                  384 - 6, 50 - 3 - 1, // HStart, VStart
 247              },
 248              // 12 // 14. 1360X768 60HZ(VESA)
 249              {
 250                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,// Flags
 251                  Res_1360x768, // ResIndex
 252                  477, 600, // HFreq, VFreq
 253                  1792, 795 - 1, // HTotal, VTotal
 254                  368 - 5, 24 - 6 - 1, // HStart, VStart
 255              },
 256              // 13 // 15. 1440X900 60Hz Reduce Blanking(VESA)
 257              {
 258                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 259                  Res_1440x900, // ResIndex
 260                  554, 599, // HFreq, VFreq
 261                  1600, 926, // HTotal, VTotal
 262                  112 - 5, 23 - 6 - 1, // HStart, VStart
 263                  //JOVE add for TENGSHAN
 264                  //122 - 2, 23 - 6 - 1, // HStart, VStart
 265                  //JOVE add for CEHUA
 266                  //116 - 2, 23 - 6 - 1, // HStart, VStart
 267              },
 268              // 14 // 16. 1440X900 60Hz Normal Blanking(VESA)
 269              {
 270                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 271                  Res_1440x900, // ResIndex
 272                  559, 598, // HFreq, VFreq
 273                  1904, 934, // HTotal, VTotal
 274                  384 - 6, 31 - 6 - 1, // HStart, VStart
 275                  //JOVE add for TENGSHAN 
 276                  //394 - 6, 31 - 6 - 1, // HStart, VStart
 277                  //JOVE add for CEHUA
 278                  //392 - 6, 31 - 6 - 1, // HStart, VStart
 279              },
 280              // 15 // 17. 1440X900 75HZ(VESA)
 281              {
 282                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 283                  Res_1440x900, // ResIndex
 284                  706, 750, // HFreq, VFreq
 285                  1936, 942, // HTotal, VTotal
 286                  400 - 6,  39 - 6 - 1, // HStart, VStart
 287                  //JOVE add for TENGSHAN
 288                  //410 - 6,  39 - 6 - 1, // HStart, VStart
 289                  //JOVE add for CEHUA
 290                  //404 - 6,  39 - 6 - 1, // HStart, VStart
 291              },
 292              // 16 // 18. 1440X900 85Hz(VESA)
 293              {
 294                  SyncHnVp, // Flags
 295                  Res_1440x900, // ResIndex
 296                  804, 848, // HFreq, VFreq
 297                  1952, 948, // HTotal, VTotal
 298                  408 - 6,  45 - 6 - 1, // HStart, VStart
 299              },
 300              //Add a new mode for some PC 1080P timing
 301              // 1920X1080  60Hz        // 103 QD-CVT1960H , ouput DCLK=173MHz
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 6   

 302              {
 303              SyncHnVp | SyncHpVn | SyncHpVp | SyncHnVn, // Flags
 304          
 305                 Res_1920x1080, // resolution index
 306                 672, 600,     // HFreq, VFreq
 307                 2576,1120,    // HTotal, VTotal
 308                 0x208,0x1F,//528, 37,      // HStart, VStart
 309              },
 310              // 17 // 19. 1680X1050 60Hz Reduced Blanking(VESA)
 311              {
 312                  SyncHnVp | SyncHpVn | SyncHpVp | SyncHnVn, // Flags
 313                  Res_1680x1050, // ResIndex
 314                  646,  598, // HFreq, VFreq
 315                  1840, 1080, // HTotal, VTotal
 316                  120 - 8,   27 - 6 - 1, // HStart, VStart
 317              },
 318              // 18 // 20. 1680X1050 60Hz Normal Blanking(VESA)
 319              {
 320                  SyncHnVp | SyncHpVn | SyncHpVp | SyncHnVn, // Flags
 321                  Res_1680x1050, // ResIndex
 322                  652 , 599, // HFreq, VFreq
 323                  2240, 1089, // HTotal, VTotal
 324                  462 - 8 ,  36 - 6 - 1, // HStart, VStart
 325              },
 326              //19 // 21. 1680X1050 75HZ
 327              {
 328                  SyncHnVp | SyncHpVn | SyncHpVp | SyncHnVn, // Flags
 329                  Res_1680x1050, // ResIndex
 330                  823 , 748, // HFreq, VFreq
 331                  2272, 1099, // HTotal, VTotal
 332                  472 - 9 ,  46 - 6 - 1, // HStart, VStart
 333              },
 334              //====================================
 335              //===== Normal Mode Start ============
 336              //====================================
 337              // 20 // 22. 640x350 70Hz (IMB VGA)
 338              {
 339                  SyncHpVn, // Flags
 340                  Res_640x350, // ResIndex
 341                  315, 700, // HFreq, VFreq
 342                  800, 449, // HTotal, VTotal
 343                  145, 62 - 2 - 1,//144 - 5, 62 - 2 - 1, // HStart, VStart    //PS. spec 144, 61
 344              },
 345              //21    // 23. 640x350 85Hz (VESA)
 346              {
 347                  SyncHpVn, // Flags
 348                  Res_640x350, // ResIndex
 349                  379, 851, // HFreq, VFreq
 350                  832, 445, // HTotal, VTotal
 351                  160 - 5, 63 - 3 - 1, // HStart, VStart
 352              },
 353              //22    // 24. 720x400 70Hz (VGA)
 354              {
 355                  SyncHpVp | SyncHnVp | SyncHnVn, // Flags
 356                  Res_720x400, // ResIndex
 357                  315, 700, // HFreq, VFreq
 358                  900, 449, // HTotal, VTotal
 359                  162, 37 - 2 - 1,//160 - 6, 37 - 2 - 1, //160 - 6, 37 - 2 - 1, // HStart, VStart     //PS.spec 153,
             - 29
 360              },
 361              //23   // 25. 720x400 85Hz (VESA)     //Haven't tune Chroma No this Timing
 362              {
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 7   

 363                  SyncHpVp | SyncHnVp | SyncHnVn, // Flags
 364                  Res_720x400, // ResIndex
 365                  379, 850, // HFreq, VFreq
 366                  936, 446, // HTotal, VTotal
 367                  180 - 5, 45 - 3 - 1, // HStart, VStart
 368              },
 369              //24   // 26. 640x400 56Hz (NEC)
 370              {
 371                  SyncHnVn, // Flags
 372                  Res_640x400, // ResIndex
 373                  249, 564, // HFreq, VFreq
 374                  848, 440, // HTotal, VTotal
 375                  144 - 5, 33 - 8 - 1, // HStart, VStart
 376              },
 377              //25    // 27. 640x400 70Hz (IMB VGA)
 378              {
 379                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 380                  Res_640x400, // ResIndex
 381                  379, 851, // HFreq, VFreq
 382                  832, 445, // HTotal, VTotal
 383                  160 - 5, 44 - 3 - 1, // HStart, VStart
 384              },
 385              //===============================================
 386              //===>Conflict with WSVGA(848x480@60Hz HpVp) ====
 387              //===============================================
 388              //27    // 29. 640x480 60Hz (VESA)
 389              {
 390                  //SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 391                  SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 392                  Res_640x480, // ResIndex
 393                  315, 599, // HFreq, VFreq
 394                  800, 525, // HTotal, VTotal
 395                  136 + 8, 27 + 5, //136, 27 - 3, //139, 32, // HStart, VStart           //spec 136, 27   //111111 R
             -ick modified
 396              },
 397          
 398              //28   // 30. 640x480 66Hz (MAC)
 399              {
 400                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 401                  Res_640x480, // ResIndex
 402                  350, 667, // HFreq, VFreq
 403                  864, 525, // HTotal, VTotal
 404                  160, 42, // HStart, VStart
 405              },
 406          
 407              //29  // 31. 640x480 72Hz (VESA)
 408              {
 409                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 410                  Res_640x480, // ResIndex
 411                  335, 671, // HFreq, VFreq
 412                  816, 499, // HTotal, VTotal
 413                  153, 14, // HStart, VStart
 414              },
 415          
 416              //29  // 31. 640x480 72Hz (VESA)
 417              {
 418                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 419                  Res_640x480, // ResIndex
 420                  379, 728, // HFreq, VFreq
 421                  832, 520, // HTotal, VTotal
 422                  160 - 5, 23 - 3 - 1, // HStart, VStart
 423              },
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 8   

 424              //30  // 32. 640x480 75Hz (VESA)
 425              {
 426                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 427                  Res_640x480, // ResIndex
 428                  375, 750, // HFreq, VFreq
 429                  840, 500, // HTotal, VTotal
 430                  184 - 5, 19 - 3 - 1, // HStart, VStart
 431              },
 432              //31 // 33. 640x480 85Hz (VESA)
 433              {
 434                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 435                  Res_640x480, // ResIndex
 436                  433, 850, // HFreq, VFreq
 437                  832, 509, // HTotal, VTotal
 438                  136 - 5, 28 - 3 - 1, // HStart, VStart
 439              },
 440              //32  // 34. 800x600 56Hz (VESA)
 441              {
 442                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 443                  Res_800x600, // ResIndex
 444                  352, 562, // HFreq, VFreq
 445                  1024, 625, // HTotal, VTotal
 446                  200 - 5, 24 - 2 - 1, // HStart, VStart
 447              },
 448              //33 // 35. 800x600 60Hz (VESA)
 449              {
 450                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 451                  Res_800x600, // ResIndex
 452                  379, 603, // HFreq, VFreq
 453                  1056, 628, // HTotal, VTotal
 454                  216 - 5, 27 - 4 - 1, // HStart, VStart
 455              },
 456              // 34 // 36. 800x600 72Hz (VESA)
 457              {
 458                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 459                  Res_800x600, // ResIndex
 460                  481, 722, // HFreq, VFreq
 461                  1040, 666, // HTotal, VTotal
 462                  184 - 5, 29 - 6 - 1, // HStart, VStart
 463              },
 464              // 35 // 37. 800x600 75Hz (VESA)
 465              {
 466                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 467                  Res_800x600, // ResIndex
 468                  469, 750, // HFreq, VFreq
 469                  1056, 625, // HTotal, VTotal
 470                  240 - 5, 24 - 3 - 1, // HStart, VStart
 471              },
 472              // 36  // 38. 800x600 85Hz (VESA)
 473              {
 474                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 475                  Res_800x600, // ResIndex
 476                  537, 851, // HFreq, VFreq
 477                  1048, 631, // HTotal, VTotal
 478                  216 - 5, 30 - 3 - 1, // HStart, VStart
 479              },
 480              //37  // 39. 832x624 75Hz (MAC)
 481              {
 482                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 483                  Res_832x624, // ResIndex
 484                  497, 746, // HFreq, VFreq
 485                  1152, 665,//667, // HTotal, VTotal
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 9   

 486                  288 - 5, 42 - 3 - 1, // HStart, VStart
 487              },
 488              //========================================================
 489              //===>Conflict with WXVGA(1280x768@60Hz HpVp;HnVp) ====
 490              //========================================================
 491          
 492              // 38 // 40. 1024x768 60Hz (VESA)
 493              {
 494                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flagsc
 495                  Res_1024x768, // ResIndex
 496                  484, 600, // HFreq, VFreq
 497                  1344, 806, // HTotal, VTotal
 498                  296 - 5, 35 - 6 - 1, // HStart, VStart
 499              },
 500              //39// 41. 1024x768 60Hz
 501              {
 502                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flagsc
 503                  Res_1024x768, // ResIndex
 504                  484, 600, // HFreq, VFreq
 505                  1312, 813, // HTotal, VTotal
 506                  264 - 5, 39 - 3 - 1, // HStart, VStart
 507              },
 508              //40 // 42. 1024x768 70Hz (VESA)
 509              {
 510                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 511                  Res_1024x768, // ResIndex
 512                  565, 700, // HFreq, VFreq
 513                  1328, 806, // HTotal, VTotal
 514                  280 - 6, 35 - 6 - 1, // HStart, VStart
 515              },
 516          
 517              //===============================================
 518              //===>Conflict with WXVGA(1280x768@75Hz HnVp) ===
 519              //===============================================
 520              // 41 // 43. 1024x768 75Hz(VESA)
 521              {
 522                  //SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 523                  SyncHpVp | SyncHpVn | SyncHnVn, // Flags
 524                  Res_1024x768, // ResIndex
 525                  600, 750, // HFreq, VFreq
 526                  1312, 800, // HTotal, VTotal
 527                  272 - 5, 31 - 3 - 1, // HStart, VStart
 528              },
 529              // 42 // 44. 1024x768 75Hz (MAC)
 530              {
 531                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 532                  Res_1024x768, // ResIndex
 533                  602, 749, // HFreq, VFreq
 534                  1328, 804, // HTotal, VTotal
 535                  272 - 5, 33 - 3 - 1, // HStart, VStart
 536              },
 537              //===============================================
 538              //===>Conflict with WXVGA(1280x768@85Hz HnVp) ===
 539              //===============================================
 540              // 43 // 45. 1024x768 85Hz (VESA)
 541              {
 542                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 543                  Res_1024x768, // ResIndex
 544                  683, 850, // HFreq, VFreq
 545                  1376, 808, // HTotal, VTotal
 546                  304 - 5, 39 - 3 - 1, // HStart, VStart
 547              },
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 10  

 548              // 44// 46. 1152x864 60Hz(Tune For PC)
 549              {
 550                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 551                  Res_1152x864, // ResIndex
 552                  536, 600, // HFreq, VFreq
 553                  1520, 895, // HTotal, VTotal
 554                  300, 26, // HStart, VStart
 555              },
 556              //45 // 47. 1152x864 70Hz(Tune For PC)
 557              {
 558                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 559                  Res_1152x864, // ResIndex
 560                  629, 699, // HFreq, VFreq
 561                  1536, 900,//14, // HTotal, VTotal
 562                  312 - 6, 35 - 3 - 1, // HStart, VStart
 563              },
 564              //46 // 48. 1152x864 70Hz (For ATI Card)
 565              {
 566                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 567                  Res_1152x864, // ResIndex
 568                  662, 702, // HFreq, VFreq
 569                  1536, 900,// HTotal, VTotal
 570                  288, 49, // HStart, VStart
 571              },
 572              // 47 // 49. 1152x864 75Hz (VESA)
 573              {
 574                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 575                  Res_1152x864, // ResIndex
 576                  675, 750, // HFreq, VFreq
 577                  1560, 900, // HTotal, VTotal
 578                  384 - 6, 35 - 3 - 1, // HStart, VStart
 579              },
 580              //48 // 50. 1152x864 85Hz
 581              {
 582                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 583                  Res_1152x864, // ResIndex
 584                  771, 850, // HFreq, VFreq
 585                  1576, 907, // HTotal, VTotal
 586                  360, 42, // HStart, VStart
 587              },
 588              // 49 // 51. 1152x870 75Hz (MAC)
 589              {
 590                  SyncHpVp | SyncHpVn  | SyncHnVn, // Flags
 591                  Res_1152x870, // ResIndex
 592                  689, 751, // HFreq, VFreq
 593                  1456, 915, // HTotal, VTotal
 594                  272 - 7, 42 - 3 - 1, // HStart, VStart
 595              },
 596              
 597              // 50 // 52. 1280x720 60Hz(VESA)
 598              {
 599                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,//Flags
 600                  Res_1280x720, // ResIndex
 601                  450, 600, // HFreq, VFreq
 602                  1650, 750, // HTotal, VTotal
 603                  260 - 5, 25 - 5 - 1, // HStart, VStart
 604                  //JOVE ADD FOR CEHUA 1440*900
 605                  //317 - 5, 25 - 5 - 1, // HStart, VStart
 606                  //JOVE ADD FOR CEHUA 1280*800
 607                  //210 - 5, 25 - 5 - 1, // HStart, VStart
 608              },
 609              //51 // 55. 1280x720 70Hz
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 11  

 610              {
 611                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 612                  Res_1280x720, // ResIndex
 613                  524, 700, // HFreq, VFreq
 614                  1688, 750, // HTotal, VTotal
 615                  424, 39, // HStart, VStart
 616                  //JOVE ADD FOR CEHUA 1440*900
 617                  //481, 39, // HStart, VStart
 618                  //JOVE ADD FOR CEHUA 1280*800
 619                  //374, 39, // HStart, VStart
 620              },
 621              // 52 // 56. 1280x720 75Hz
 622              {
 623                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 624                  Res_1280x720, // ResIndex
 625                  563, 750, // HFreq, VFreq
 626                  1696, 755, // HTotal, VTotal
 627                  336 - 5, 32 - 5 - 1, // HStart, VStart
 628                  //JOVE ADD FOR CEHUA 1440*900
 629                  //393 - 5, 32 - 5 - 1, // HStart, VStart
 630                  //JOVE ADD FOR CEHUA 1280*800
 631                  //286 - 5, 32 - 5 - 1, // HStart, VStart
 632              },
 633              
 634              //========================================================
 635              //===>Conflict with SXVGA+(1400x1050@60Hz HpVn,HnVP ) ====
 636              //========================================================
 637              //53 //57. 1280x1024 60Hz (VESA)
 638              {
 639                  SyncHpVp | SyncHnVn | SyncHpVn | SyncHnVp, // Flags
 640                  Res_1280x1024, // ResIndex
 641                  640, 600, // HFreq, VFreq
 642                  1688, 1066, // HTotal, VTotal
 643                  360 - 6, 41 - 3 - 1, // HStart, VStart
 644              },
 645          
 646              // 54 //58. 1280x1024 75Hz (VESA)
 647              {
 648                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 649                  Res_1280x1024, // ResIndex
 650                  800, 750, // HFreq, VFreq
 651                  1688, 1066, // HTotal, VTotal
 652                  392 - 6, 41 - 3 - 1, // HStart, VStart
 653              },
 654              // 55 //59. 1280x1024 85Hz (VESA)
 655              {
 656                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 657                  Res_1280x1024, // ResIndex
 658                  911, 850, // HFreq, VFreq
 659                  1728, 1072, // HTotal, VTotal
 660                  384 - 7, 47 - 3 - 1, // HStart, VStart
 661              },
 662              // 56 //60. 1600x1200 60Hz (VESA)
 663              {
 664                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 665                  Res_1600x1200, // ResIndex
 666                  750, 600, // HFreq, VFreq
 667                  2160, 1250, // HTotal, VTotal
 668                  496 - 7, 49 - 3 - 1, // HStart, VStart
 669              },
 670              // 57 //61. 1600x1200 65Hz (VESA)
 671              {
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 12  

 672                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 673                  Res_1600x1200, // ResIndex
 674                  813, 650, // HFreq, VFreq
 675                  2160, 1250, // HTotal, VTotal
 676                  496 - 9, 49 - 24 - 1, // HStart, VStart
 677              },
 678              //58 //62. 1600x1200 70Hz (VESA)
 679              {
 680                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 681                  Res_1600x1200, // ResIndex
 682                  875, 700, // HFreq, VFreq
 683                  2160, 1250, // HTotal, VTotal
 684                  496 - 6, 49 - 24 - 1, // HStart, VStart
 685              },
 686              // 59 //63. 1600x1200 75Hz (VESA)
 687              {
 688                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 689                  Res_1600x1200, // ResIndex
 690                  938, 750, // HFreq, VFreq
 691                  2160, 1250, // HTotal, VTotal
 692                  496 - 6, 49 - 24 - 1, // HStart, VStart
 693              },
 694              // 60 //64. 1400x1050 60Hz Reudce Blanking(VESA)
 695              {
 696                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 697                  Res_1400x1050, // ResIndex
 698                  647, 599, // HFreq, VFreq
 699                  1560, 1080, // HTotal, VTotal
 700                  112 - 5, 27 - 4 - 1, // HStart, VStart
 701              },
 702              // 61 //65. 1400x1050 60Hz Normal Blanking(VESA)
 703              {
 704                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 705                  Res_1400x1050, // ResIndex
 706                  653, 599, // HFreq, VFreq
 707                  1864, 1089, // HTotal, VTotal
 708                  376 - 6, 36 - 4 - 1, // HStart, VStart
 709              },
 710              // 62  //66. 1400x1050 75Hz (VESA)
 711              {
 712                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 713                  Res_1400x1050, // ResIndex
 714                  823, 749,      // HFreq, VFreq
 715                  1896, 1099,    // HTotal, VTotal
 716                  392 - 6, 46 - 4 - 1, // HStart, VStart
 717              },
 718              // 63 //67. 1400x1050 85Hz (VESA)
 719              {
 720                  SyncHnVp,      // Flags
 721                  Res_1400x1050, // ResIndex
 722                  939,  850,      // HFreq, VFreq
 723                  1912, 1105,    // HTotal, VTotal
 724                  408 - 6,  52 - 4 - 1, // HStart, VStart
 725              },
 726              // 64 //68. 1792x1344 60Hz (VESA)
 727              {
 728                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 729                  Res_1792x1344, // ResIndex
 730                  836, 600, // HFreq, VFreq
 731                  2448, 1394, // HTotal, VTotal
 732                  528 - 6, 49 - 3 - 1, // HStart, VStart
 733              },
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 13  

 734              // 65 //69. 1920x1080 60Hz (VESA)
 735              /*
 736              {
 737                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 738                  Res_1920x1080, // ResIndex
 739                  672, 600, // HFreq, VFreq
 740                  2576, 1120, // HTotal, VTotal
 741                  456 - 9, 35 - 3 - 1, // HStart, VStart
 742              },
 743              */
 744              // 66 //70. 1920x1200 60Hz Normal Blanking(VESA)
 745              {
 746                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 747                  Res_1920x1200, // ResIndex
 748                  746, 599, // HFreq, VFreq
 749                  2592, 1245, // HTotal, VTotal
 750                  536 - 6, 42 - 6 - 1, // HStart, VStart
 751              },
 752              // 67  //71. 1920x1200 60Hz Reduce Blanking(VESA)
 753              {
 754                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 755                  Res_1920x1200, // ResIndex
 756                  740, 599, // HFreq, VFreq
 757                  2080, 1235, // HTotal, VTotal
 758                  112 - 5, 32 - 6 - 1, // HStart, VStart
 759              },
 760          #if 1
 761              // 68 //72. 720x480 50Hz (YCbCr)
 762              {
 763                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn | bInterlaceMode, // Flags
 764                  Res_720x480, // ResIndex
 765                  156, 500, // HFreq, VFreq
 766                  900, 625, // HTotal, VTotal
 767                  144, 88, // HStart, VStart
 768              },
 769          #endif
 770              // 69 // 75. 1024x768 72Hz
 771              {
 772                  //SyncHpVp | SyncHpVn | SyncHnVp  // Flags
 773                  SyncHpVp | SyncHnVp, // Flags
 774                  Res_1024x768, // ResIndex
 775                  576, 721, // HFreq, VFreq
 776                  1312, 800, // HTotal, VTotal
 777                  272, 31, // HStart, VStart
 778              },
 779          
 780              // 70 // 76. 1280 X 1024  72 Hz
 781              {
 782                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 783                  Res_1280x1024, // ResIndex
 784                  779, 720, // HFreq, VFreq
 785                  1728, 1082, // HTotal, VTotal
 786                  360 - 5, 57 - 5 - 1, // HStart, VStart
 787              },
 788          
 789              // 71 //77. 1280 X 1024 70 Hz
 790              {
 791                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 792                  Res_1280x1024, // ResIndex
 793                  748, 697, // HFreq, VFreq
 794                  1696, 1064, // HTotal, VTotal
 795                  378, 41, // HStart, VStart
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 14  

 796              },
 797          
 798              // 72 // 24,1152 X 900 66 Hz
 799              {
 800                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 801                  Res_1152x900, // enResIndex
 802                  618, 660, // u16HFreq, u16VFreq
 803                  1504, 937, // u16HTotal, u16VTotal
 804                  322 - 7, 35 - 4 - 1, // u16HStart, u16VStart
 805              },
 806          
 807              //73 //78. 720x480I 60Hz (YPbPr)  --> 78  Start of YPbPr
 808              {
 809                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn | bInterlaceMode, // Flags
 810                  Res_720x480, // resolution index
 811                  157, 599,    // HFreq, VFreq
 812                  858, 525,    // HTotal, VTotal
 813                  238, 18,       // HStart, VStart
 814              },
 815          
 816              //74 //79. 1920x1080i 50Hz (YPbPr)
 817              {
 818                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn | bInterlaceMode, // Flags
 819                  Res_1920x1080, // resolution index
 820                  281, 500,      // HFreq, VFreq
 821                  2640, 1125,    // HTotal, VTotal
 822                  186, 24,       // HStart, VStart
 823              },
 824          
 825              //75 //80. 1920x1080i 50Hz (YPbPr)
 826              {
 827                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn | bInterlaceMode, // Flags
 828                  Res_1920x1080, // resolution index
 829                  312, 500,     // HFreq, VFreq
 830                  2304, 1250,   // HTotal, VTotal
 831                  186, 24,      // HStart, VStart
 832              },
 833          
 834              //76 //81. NTSC 1080i
 835              {
 836                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn | bInterlaceMode, // Flags
 837                  Res_1920x1080, // resolution index
 838                  337, 600,      // HFreq, VFreq
 839                  2200, 1125,    // HTotal, VTotal
 840                  232, 27,       // HStart, VStart
 841              },
 842              //77 //82  700x570 50Hz (For India TV Box)
 843              {
 844                  SyncHpVp  , // Flags
 845                  Res_700x570, // ResIndex
 846                  313, 500, // HFreq, VFreq
 847                  884, 625, // HTotal, VTotal
 848                  179, 43, // HStart, VStart
 849              },
 850              // 78//83  1152x870 60Hz (MAC)
 851              {
 852                  SyncHnVp  , // Flags
 853                  Res_1152x870, // ResIndex
 854                  540, 600, // HFreq, VFreq
 855                  1480, 900, // HTotal, VTotal
 856                  264, 24, // HStart, VStart
 857              },
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 15  

 858              //79 //84. 576P(YCbCr)
 859              {
 860                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 861                  Res_720x576, // ResIndex
 862                  312, 500, // HFreq, VFreq
 863                  864, 625, // HTotal, VTotal
 864                  125, 40, // HStart, VStart
 865              },
 866              // 80 //720x576 60Hz
 867              {
 868                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 869                  Res_720x576, // ResIndex
 870                  358, 597, // HFreq, VFreq
 871                  912, 600, // HTotal, VTotal
 872                  168 - 4, 23 - 3 - 1, // HStart, VStart
 873              },
 874              // 81 //720x576 75Hz
 875              {
 876                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 877                  Res_720x576, // ResIndex
 878                  455, 756, // HFreq, VFreq
 879                  944, 602, // HTotal, VTotal
 880                  129 - 5, 25 - 2 - 1, // HStart, VStart
 881              },
 882              // 82 //85. 576i
 883              {
 884                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn | bInterlaceMode,  // Flags
 885                  Res_720x576, // ResIndex
 886                  156, 500, // HFreq, VFreq
 887                  864, 626, // HTotal, VTotal
 888                  264, 22, // HStart, VStart
 889              },
 890          
 891              // 83 // 86. 480P 60Hz
 892              {
 893                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 894                  Res_720x480, // ResIndex
 895                  315, 599, // HFreq, VFreq
 896                  858, 525, // HTotal, VTotal
 897                  122, 36,   // HStart, VStart
 898              },
 899          
 900              // 84 //87.     480i
 901              {
 902                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn | bInterlaceMode,  // Flags
 903                  Res_640x480, // ResIndex
 904                  157, 599, // HFreq, VFreq
 905                  1716, 525, // HTotal, VTotal
 906                  238, 21, // HStart, VStart
 907              },
 908              // 85 //90. PAL 1080p
 909              {
 910                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 911                  Res_1920x1080, // ResIndex
 912                  562, 500, // HFreq, VFreq
 913                  2640, 1125, // HTotal, VTotal
 914                  112, 28, // HStart, VStart
 915              },
 916              // 86 //91. NTSC 1080p
 917              {
 918                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 919                  Res_1920x1080, // ResIndex
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 16  

 920                  674, 599, // HFreq, VFreq
 921                  2200, 1125,// HTotal, VTotal
 922                  192 - 7, 41 - 5 - 1, // HStart, VStart
 923              },
 924              // 87 // 92. 832x624 75Hz (MAC)
 925              {
 926                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
 927                  Res_832x624, // ResIndex
 928                  497, 746, // HFreq, VFreq
 929                  1152, 662, // HTotal, VTotal
 930                  288, 42, // HStart, VStart
 931              },
 932              //88 //94. 1280x800 60_RHz
 933              {
 934                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 935                  Res_1280x800, // ResIndex
 936                  493, 599, // HFreq, VFreq
 937                  //1440, 823,// HTotal, VTotal
 938                  1500, 823,// HTotal, VTotal
 939                  112 - 5, 20 - 6 - 1, // HStart, VStart
 940                  //JOVE add for TENGSHAN
 941                  //122 - 5, 20 - 6 - 1, // HStart, VStart
 942              },
 943              //89 //95. 1280x800 60Hz
 944              {
 945                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 946                  Res_1280x800, // ResIndex
 947                  497, 598, // HFreq, VFreq
 948                  //1680, 831,// HTotal, VTotal
 949                  1740, 831,// HTotal, VTotal
 950                  328 - 5, 28 - 6 - 1, // HStart, VStart
 951                  //JOVE add for TENGSHAN
 952                  //338 - 5, 28 - 6 - 1, // HStart, VStart
 953              },
 954              //96. 1280x800 60Hz
 955              {
 956                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 957                  Res_1280x800, // ResIndex
 958                  497, 598, // HFreq, VFreq
 959                  //1696, 838,// HTotal, VTotal
 960                  1740, 838,// HTotal, VTotal
 961                  336 - 5, 35 - 6 - 1, // HStart, VStart
 962                  //JOVE add for TENGSHAN
 963                  //346 - 5, 35 - 6 - 1, // HStart, VStart
 964              },
 965              //1280x800 60Hz        NVIDIA
 966              {
 967                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 968                  Res_1280x800, // ResIndex
 969                  495, 598, // HFreq, VFreq
 970                  //1680, 828,// HTotal, VTotal
 971                  1740, 828,// HTotal, VTotal
 972                  329, 23,       // HStart, VStart
 973                  //JOVE add for TENGSHAN
 974                  //339, 23,       // HStart, VStart
 975              },
 976              //97. 1280x800 75Hz
 977              {
 978                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 979                  Res_1280x800, // ResIndex
 980                  628, 749, // HFreq, VFreq
 981                  1696, 838,// HTotal, VTotal
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 17  

 982                  336 - 5, 35 - 6 - 1, // HStart, VStart
 983                  //JOVE add for TENGSHAN
 984                  //346 - 5, 35 - 6 - 1, // HStart, VStart
 985              },
 986              //98. 1280x800 76Hz
 987              {
 988                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 989                  Res_1280x800, // ResIndex
 990                  647, 764, // HFreq, VFreq
 991                  1568, 846,// HTotal, VTotal
 992                  264, 43,       // HStart, VStart
 993              },
 994              //99. 1080p 138.5M
 995              {
 996                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
 997                  Res_1920x1080, // ResIndex
 998                  666, 599, // HFreq, VFreq
 999                  2080, 1111,// HTotal, VTotal
1000                  112 - 7, 28 - 5 - 1, // HStart, VStart
1001              },
1002              //100. 1080p 148.5M
1003              {
1004                  SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn,   // Flags
1005                  Res_1920x1080, // ResIndex
1006                  663, 599, // HFreq, VFreq
1007                  2240, 1107,// HTotal, VTotal
1008                  256 - 9, 26 - 3 - 1, // HStart, VStart
1009              },
1010          
1011              // 101, 1920x1080P 24Hz
1012              {
1013                  SyncHpVp |SyncHpVn |SyncHnVp |SyncHnVn, // Flags
1014                  Res_1920x1080, // ResIndex
1015                  270, 240, // HFreq, VFreq
1016                  2750, 1125, // HTotal, VTotal
1017                  229,60,//230, 60,//59,
1018              },
1019              // 102, 1920x1080P 25Hz
1020              {
1021                  SyncHpVp |SyncHpVn |SyncHnVp |SyncHnVn, // Flags
1022                  Res_1920x1080, // ResIndex
1023                  281, 250, // HFreq, VFreq
1024                  2640, 1125, // HTotal, VTotal
1025                  229,60,//230, 60,//59,
1026              },
1027              // 103, 1920x1080P 30Hz
1028              {
1029                  SyncHpVp |SyncHpVn |SyncHnVp |SyncHnVn, // Flags
1030                  Res_1920x1080, // ResIndex
1031                  338, 300, // HFreq, VFreq
1032                  2200, 1125, // HTotal, VTotal
1033                  229,60,//230, 60,//59,
1034              },
1035          //, 2560x1600 60Hz
1036            {
1037              SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
1038              Res_2560x1600, // ResIndex
1039              988, 600, // HFreq, VFreq
1040              2720, 1646, // HTotal, VTotal
1041              112, 39,
1042            },  
1043          //, 2560x1440 60Hz
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 18  

1044            {
1045            SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
1046            Res_2560x1440, // ResIndex
1047            888, 600, // HFreq, VFreq
1048            2720, 1481, // HTotal, VTotal
1049            112, 39,
1050          },
1051          
1052          #if  _3D_TIMING
              //1920x1080 24Hz FP
                  {
                      SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
                      Res_1920x2160, // ResIndex
                      541, 240, // HFreq, VFreq
                      2750, 2250, // HTotal, VTotal
                      192, 41, // HStart, VStart
                  },
                  //1280x72P 60Hz FP
                  {
                      SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
                      Res_1280x720P_FP, // resolution index
                      900, 600,      // HFreq, VFreq
                      1650, 1500,    // HTotal, VTotal
                      220, 20,       // HStart, VStart
                  },
                  //76, 1280x72P 50Hz FP
                  {
                      SyncHpVp | SyncHpVn | SyncHnVp | SyncHnVn, // Flags
                      Res_1280x720P_FP, // resolution index
                      750, 500,      // HFreq, VFreq
                      1980, 1500,    // HTotal, VTotal
                      220, 20,       // HStart, VStart
                  },
              
              
              #endif
1080              //=====IMPORTANT    DON'T DELETE IT, OR IT WILL CAUSE LOOP INIFINITE
1081              {
1082                  0, // Flags
1083                  0, // ResIndex
1084                  0, 0, // HFreq, VFreq
1085                  0, 0, // HTotal, VTotal
1086                  0, 0, // HStart, VStart
1087              }
1088          };
1089          WORD GetStandardModeWidth( void )
1090          {
1091   1          return StandardModeResolution[StandardModeGroup].DispWidth;
1092   1      }
1093          WORD GetStandardModeHeight( void )
1094          {
1095   1          return StandardModeResolution[StandardModeGroup].DispHeight;
1096   1      }
1097          WORD GetStandardModeGroup( void )
1098          {
1099   1          return StandardMode[SrcModeIndex].ResIndex;
1100   1      }
1101          WORD GetStandardModeHStart( void)
1102          {
1103   1          return StandardMode[SrcModeIndex].HStart;
1104   1      }
1105          WORD GetStandardModeVStart( void)
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 19  

1106          {
1107   1          return StandardMode[SrcModeIndex].VStart;
1108   1      }
1109          WORD GetStandardModeVTotal( void )
1110          {
1111   1          return StandardMode[SrcModeIndex].VTotal;
1112   1      }
1113          WORD GetStandardModeHTotal( void )
1114          {
1115   1          return StandardMode[SrcModeIndex].HTotal;
1116   1      }
1117          WORD GetStandardModeHFreq( void )
1118          {
1119   1          return StandardMode[SrcModeIndex].HFreq;
1120   1      }
1121          WORD GetStandardModeVFreq( void )
1122          {
1123   1          return StandardMode[SrcModeIndex].VFreq;
1124   1      }
1125          #if ENABLE_DVI_DUAL_LINK
              WORD Mode_GetStandardModePxlRate(void)
              {
                  return (WORD)((DWORD)StandardModeHTotal * HFreq( SrcHPeriod ) / 10000);
              }
              #endif
1131          //========================================================================================
1132          #if 1
1133          #define PHASE_MAX          (0x80)
1134          #define PHASE_STEP         (0x07)
1135          #define PHASE_CENTER    0x40
1136          
1137          #define CHECK_MODE_WIDTH   1
1138          
1139          void appCheckSimilarTiming(void)
1140          {
1141   1      #if CHECK_MODE_WIDTH
1142   1          WORD xdata wWidth;
1143   1      #endif
1144   1          BYTE vsyncTime, i, ucIndex, uccount;
1145   1          DWORD maxcksum, cksum, maxcksum1;
1146   1          BYTE adjPhase;
1147   1      
1148   1          if(ucSimilarTimingNums <= 1 || (SrcFlags&bUnsupportMode))
1149   1              return;
1150   1      
1151   1          vsyncTime = GetVSyncTime();
1152   1          i = 0;
1153   1          maxcksum = maxcksum1 = 0;
1154   1          ucIndex = SrcModeIndex;
1155   1          uccount = (ucSimilarTimingNums>=SIMILAR_TIMING_BUFFER_MAX)?(SIMILAR_TIMING_BUFFER_MAX):(ucSimilarTimin
             -gNums);
1156   1      
1157   1                  //printData(" ucSimilarTimingNums:%d", ucSimilarTimingNums);
1158   1      
1159   1          while(uccount--)
1160   1          {
1161   2              //111027 Rick add for reload ADC table while check similar timing - B39609
1162   2              wWidth = HFreq( SrcHPeriod );//(( DWORD )MST_CLOCK_MHZ * 10 + SrcHPeriod / 2 ) / SrcHPeriod; //cal
             -culate hfreq: round 5
1163   2              wWidth = (( DWORD )wWidth * StandardModeHTotal + 5000 ) / 10000; //dclk= hfreq * htotal
1164   2              drvADC_SetModewithPLLProtection(g_bInputSOGFlag ? ADC_INPUTSOURCE_YPBPR : ADC_INPUTSOURCE_RGB, wWi
             -dth, StandardModeHTotal);
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 20  

1165   2      
1166   2              drvADC_AdjustHTotal(StandardModeHTotal);
1167   2      
1168   2      #if CHECK_MODE_WIDTH
1169   2              wWidth = SearchMaxWidth(vsyncTime);
1170   2      
1171   2              //printData(" width:%d", wWidth);
1172   2      
1173   2              if(abs(wWidth - StandardModeWidth) < 2)     //110930 Rick modified check similar timing condition
1174   2              {
1175   3                  //printData(" similar width:%d", wWidth);
1176   3      
1177   3                  return;
1178   3              }
1179   2      #endif
1180   2      
1181   2              SC0_SET_IMAGE_WIDTH(StandardModeWidth);//msWrite2Byte( SC0_0B, StandardModeWidth);
1182   2              SC0_SET_IMAGE_HEIGHT(StandardModeHeight);//msWrite2Byte( SC0_09, StandardModeHeight );
1183   2      
1184   2              for( adjPhase = 0; adjPhase < PHASE_MAX; adjPhase += PHASE_STEP)
1185   2              {
1186   3                  drvADC_SetPhaseCode( adjPhase );
1187   3                  Delay1ms( vsyncTime + 3 );
1188   3                  AUTO_PHASE_RESULT_READY();//WaitAutoStatusReady(SC0_8B, BIT1);
1189   3                  //cksum = msRead2Byte(SC0_8E);
1190   3                  //cksum = ( cksum << 16 ) | msRead2Byte(SC0_8C);
1191   3                  cksum = AUTO_PHASE_READ_VALUE();
1192   3                  if( cksum > maxcksum )
1193   3                  {
1194   4                      maxcksum = cksum;
1195   4                  }
1196   3              }
1197   2      
1198   2              if(maxcksum > maxcksum1)
1199   2              {
1200   3                  maxcksum1 = maxcksum;
1201   3                  ucIndex = SrcModeIndex;
1202   3                  //printData(" SrcModeIndex_MaxCksm:%d", SrcModeIndex);
1203   3              }
1204   2      
1205   2              SrcModeIndex = ucSimilarTimingBuffer[i++];
1206   2      
1207   2          }
1208   1      
1209   1          SrcModeIndex = ucIndex;
1210   1      
1211   1                  //printData(" SrcModeIndexFinal:%d", SrcModeIndex);
1212   1      
1213   1      }
1214          
1215          #define DIGITAL_TOLERANCE   3
1216          Bool mStar_FindMode( void )
1217          {
1218   1          WORD hFreq, vFreq;
1219   1          BYTE htol, vtol;
1220   1          WORD tempHeight, tempWidth;
1221   1          bit bDigitalInput = 0;
1222   1      
1223   1      #define fStatus  hFreq
1224   1          fStatus = mStar_GetInputStatus();
1225   1          if( SyncPolarity( SrcFlags ) != SyncPolarity( fStatus ) )        // Sync polarity changed
1226   1          {
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 21  

1227   2              return FALSE;
1228   2          }
1229   1          SrcFlags &= 0x0F;
1230   1      #undef fStaus
1231   1      
1232   1          hFreq = SC0_READ_HPEROID();//msRead2Byte(SC0_E4) & 0x1FFF;
1233   1        #if ENABLE_FREESYNC
                if (!IS_DP_FREESYNC())
                #endif
1236   1        {
1237   2          if( abs( hFreq - SrcHPeriod ) > HPeriod_Torlance )        // HPeriod changed
1238   2          {
1239   3            return FALSE;
1240   3          }
1241   2        }
1242   1      
1243   1          vFreq = SC0_READ_VTOTAL();//msRead2Byte(SC0_E2) & 0xFFF;
1244   1          #if ENABLE_FREESYNC
                if (!IS_HDMI_FREESYNC())
                #endif
1247   1        {
1248   2              if( abs( vFreq - SrcVTotal ) > VTotal_Torlance )        // vtotal changed
1249   2              {
1250   3                //MODE_printData("--vtotal change--");
1251   3                  return FALSE;
1252   3              }
1253   2          }
1254   1      
1255   1      #if ENABLE_FREESYNC
                  if(CURRENT_INPUT_IS_HDMI())
                      msDrv_forceIP1VsyncPolarityEnable();
              #endif
1259   1      
1260   1          /////////////////////////////////////////////////////////
1261   1      
1262   1          if( SrcHPeriod > 511 )        // prevent counter overflow when input frequency is very low
1263   1          {
1264   2              hFreq = SrcHPeriod * 16;
1265   2          }
1266   1          else
1267   1          {
1268   2              tempHeight = GetVSyncTime() * 8;
1269   2              SC0_HPEROID_DETECT_MODE(TRUE);
1270   2              Delay1ms( tempHeight );
1271   2              hFreq = SC0_READ_HPEROID();
1272   2              SC0_HPEROID_DETECT_MODE(FALSE);
1273   2              Delay1ms( tempHeight );
1274   2          }
1275   1      
1276   1          hFreq=(hFreq+8)/16;
1277   1          MODE_printData( " FindMode_Hperoid:%d", hFreq );
1278   1          /////////////////////////////////////////////////////////
1279   1      
1280   1          SrcVTotal = vFreq;
1281   1      #if ENABLE_FREESYNC
                  if(IS_DP_FREESYNC())
                  {
                      WORD u16PixClk, u16Htt;
              
                      u16PixClk = msAPI_combo_IPGetPixelClk();
                      u16Htt = msAPI_combo_IPGetGetHTotal();
                      if((u16Htt!=0)&&(SrcVTotal!=0))
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 22  

                      {
                          hFreq = ((DWORD)u16PixClk * 100 + u16Htt/2)/u16Htt;
                          vFreq = ((DWORD)hFreq * 1000 + SrcVTotal/2)/SrcVTotal;
                      }
                  }
                  else
              #endif
1296   1          {
1297   2              SrcHPeriod = hFreq;
1298   2              hFreq = HFreq( SrcHPeriod );
1299   2              vFreq = VFreq( hFreq, SrcVTotal );
1300   2          }
1301   1      
1302   1          //======== for interlace mode
1303   1          if( (SC0_READ_SYNC_STATUS()&INTM_B) //msReadByte( SC0_E1 ) &INTM_B
1304   1      #if ENABLE_DP_INPUT
                  ||(CURRENT_INPUT_IS_DISPLAYPORT() && DP_INTERLACED_VIDEO_STREAM() )
              #endif
1307   1          )
1308   1          {
1309   2              SrcFlags |= bInterlaceMode;
1310   2              vFreq *= 2;
1311   2          }
1312   1      
1313   1          SrcVFreq = vFreq;
1314   1      
1315   1          MODE_printData( " FindMode_hFreq:%d", hFreq );
1316   1          MODE_printData( " FindMode_vFreq:%d", vFreq );
1317   1          MODE_printData( " SrcVFreq:%d", SrcVFreq );
1318   1      
1319   1          //====================================
1320   1          // check if input timing is out of range
1321   1      #if 0//!ENABLE_MHL
                  //110929 Rick modified for detect unsupport mode if input vFreq out of Panel spec range - A040
                  if( vFreq > PanelMaxVfreq|| vFreq < PanelMinVfreq )
                  {
                      SrcFlags |= bUnsupportMode;
                      return TRUE;
                  }
              #endif
1329   1      
1330   1          htol = HFreq_Torlance; //0527 add for getting more accurate mode
1331   1          vtol = VFreq_Torlance;
1332   1      
1333   1          ucSimilarTimingNums = 0;
1334   1          SrcModeIndex = 0xFF;
1335   1      
1336   1          if(!CURRENT_INPUT_IS_VGA())//(SrcInputType >= Input_Digital)
1337   1          {
1338   2              bDigitalInput = 1;
1339   2      #if ENABLE_DP_INPUT     //111027 Rick modified - B39435
                      if(CURRENT_INPUT_IS_DISPLAYPORT())//(SrcInputType == Input_Displayport)
                      {
                          tempWidth = (SC0_READ_AUTO_WIDTH()*2);
                          tempHeight = (SC0_READ_AUTO_HEIGHT());
                      }
                      else
              #endif
1347   2              {
1348   3              tempWidth = SC0_READ_AUTO_WIDTH();//msRead2Byte(SC0_84)-msRead2Byte(SC0_80)+1; // get DE width
1349   3              tempHeight = SC0_READ_AUTO_HEIGHT();//msRead2Byte(SC0_82)-msRead2Byte(SC0_7E)+1; // get DE Height
1350   3              }
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 23  

1351   2          }
1352   1      
1353   1      #if (CHIP_ID == CHIP_TSUM2) || (CHIP_ID == CHIP_TSUMU) || (CHIP_ID == CHIP_TSUMC) || (CHIP_ID==CHIP_TSUMK)
             - || (CHIP_ID == CHIP_TSUMD)
                  if (g_SetupPathInfo.ucSCFmtIn == SC_FMT_IN_3D_FP)
                      tempHeight=tempHeight*2-SrcVTotal;
              #endif
1357   1      
1358   1          // search input mode index
1359   1          {
1360   2              Bool found = FALSE;
1361   2              BYTE ucModeIndex;
1362   2              BYTE ucHVtolerance_min = HFreq_Torlance+VFreq_Torlance;
1363   2              BYTE ucHVtolerance = HFreq_Torlance+VFreq_Torlance;
1364   2              BYTE ucVtotal_min = VTotal_Torlance;
1365   2              BYTE ucVtotal = VTotal_Torlance;
1366   2              InputModeType *modePtr = StandardMode;
1367   2              BYTE ucSimilarindex=0;
1368   2      
1369   2              // get standard mode index
1370   2              for(ucModeIndex = 0; modePtr->HFreq > 0; modePtr++, ucModeIndex++)
1371   2              {
1372   3              if(bDigitalInput)
1373   3              {
1374   4                      if((abs(tempWidth - StandardModeResolution[modePtr->ResIndex].DispWidth) > DIGITAL_TOLERAN
             -CE) ||
1375   4                              (abs(tempHeight - StandardModeResolution[modePtr->ResIndex].DispHeight) > DIGITAL_
             -TOLERANCE))
1376   4                          continue;
1377   4              }
1378   3      
1379   3                  if((CURRENT_SOURCE_IS_INTERLACE_MODE()) != (modePtr->Flags & bInterlaceMode))
1380   3                      continue;
1381   3      
1382   3                  if(SrcVTotal < StandardModeResolution[modePtr->ResIndex].DispHeight)
1383   3                      continue;
1384   3      
1385   3                  if((abs(hFreq - modePtr->HFreq) < HFreq_Torlance) &&
1386   3                      (abs(vFreq - modePtr->VFreq) < VFreq_Torlance) &&
1387   3                      (abs(SrcVTotal - modePtr->VTotal) < VTotal_Torlance)&&
1388   3                      (GetSyncPolarity( SrcFlags )&modePtr->Flags))
1389   3                  {
1390   4                      ucHVtolerance = abs(hFreq - modePtr->HFreq) + abs(vFreq - modePtr->VFreq);
1391   4                      ucVtotal = abs(SrcVTotal - modePtr->VTotal);
1392   4      
1393   4                      if((ucHVtolerance_min >= ucHVtolerance) && (ucVtotal_min >= ucVtotal))
1394   4                      {
1395   5                          found = TRUE;
1396   5                          ucHVtolerance_min = ucHVtolerance;
1397   5                          ucVtotal_min = ucVtotal;
1398   5                          SrcModeIndex = ucModeIndex;
1399   5                          ucSimilarTimingBuffer[ucSimilarindex] = ucModeIndex;
1400   5                          ucSimilarTimingNums ++;
1401   5                          ucSimilarindex = (ucSimilarindex+1)%SIMILAR_TIMING_BUFFER_MAX;
1402   5                      }
1403   4                  }
1404   3              }
1405   2      
1406   2              if( !found )
1407   2              {
1408   3                  modePtr = StandardMode;
1409   3                  ucHVtolerance_min = HFREQ_TOLERANCE_ENLARGE + VFREQ_TOLERANCE_ENLARGE;
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 24  

1410   3                  ucVtotal_min = VTotal_Delta;
1411   3      
1412   3                  for(ucModeIndex = 0; modePtr->HFreq > 0; modePtr++, ucModeIndex++)
1413   3                  {
1414   4                      if(bDigitalInput)
1415   4                      {
1416   5                          if((abs(tempWidth - StandardModeResolution[modePtr->ResIndex].DispWidth) > DIGITAL_TOL
             -ERANCE) ||
1417   5                              (abs(tempHeight - StandardModeResolution[modePtr->ResIndex].DispHeight) > DIGITAL_
             -TOLERANCE))
1418   5                              continue;
1419   5                      }
1420   4      
1421   4                      if((CURRENT_SOURCE_IS_INTERLACE_MODE()) != (modePtr->Flags & bInterlaceMode))
1422   4                          continue;
1423   4      
1424   4                      if(SrcVTotal < StandardModeResolution[modePtr->ResIndex].DispHeight)
1425   4                          continue;
1426   4      
1427   4                      if((abs(hFreq - modePtr->HFreq) < HFREQ_TOLERANCE_ENLARGE) &&
1428   4                          (abs(vFreq - modePtr->VFreq) < VFREQ_TOLERANCE_ENLARGE) &&
1429   4                          (abs(SrcVTotal - modePtr->VTotal) < VTotal_Delta))
1430   4                      {
1431   5                          ucHVtolerance = abs(hFreq - modePtr->HFreq) + abs(vFreq - modePtr->VFreq);
1432   5                          ucVtotal = abs(SrcVTotal - modePtr->VTotal);
1433   5      
1434   5                          if((ucHVtolerance_min >= ucHVtolerance) && (ucVtotal_min >= ucVtotal))
1435   5                          {
1436   6                              found = TRUE;
1437   6                              ucHVtolerance_min = ucHVtolerance;
1438   6                              ucVtotal_min = ucVtotal;
1439   6                              SrcModeIndex = ucModeIndex;
1440   6                              ucSimilarTimingBuffer[ucSimilarindex] = ucModeIndex;
1441   6                              ucSimilarTimingNums ++;
1442   6                              ucSimilarindex = (ucSimilarindex+1)%SIMILAR_TIMING_BUFFER_MAX;
1443   6                          }
1444   5                      }
1445   4                  }
1446   3              }
1447   2      
1448   2              if( !found )            // out of standard input range
1449   2              {
1450   3                  modePtr = StandardMode;
1451   3                  ucVtotal_min = VTotal_Delta;
1452   3      
1453   3                  for(ucModeIndex = 0; modePtr->HFreq > 0; modePtr++, ucModeIndex++)
1454   3                  {
1455   4                      if((CURRENT_SOURCE_IS_INTERLACE_MODE()) != (modePtr->Flags & bInterlaceMode))
1456   4                          continue;
1457   4      
1458   4                      if(SrcVTotal < StandardModeResolution[modePtr->ResIndex].DispHeight)
1459   4                          continue;
1460   4      
1461   4                      if(abs(SrcVTotal - modePtr->VTotal) < VTotal_Delta)
1462   4                      {
1463   5                          ucVtotal = abs(SrcVTotal - modePtr->VTotal);
1464   5      
1465   5                          if(ucVtotal_min > ucVtotal)
1466   5                          {
1467   6                              found = TRUE;
1468   6                              SrcFlags |= bUserMode;
1469   6                              ucVtotal_min = ucVtotal;
C51 COMPILER V9.60.0.0   MODE                                                              12/25/2020 09:24:27 PAGE 25  

1470   6                              SrcModeIndex = ucModeIndex;
1471   6                              ucSimilarTimingBuffer[ucSimilarindex] = ucModeIndex;
1472   6                              ucSimilarTimingNums ++;
1473   6                              ucSimilarindex = (ucSimilarindex+1)%SIMILAR_TIMING_BUFFER_MAX;
1474   6                          }
1475   5                      }
1476   4                  }
1477   3              } // out of standard input range
1478   2      
1479   2              if(CURRENT_INPUT_IS_VGA())
1480   2                  appCheckSimilarTiming();
1481   2      
1482   2              if( !found 
1483   2      #if ENABLE_FREESYNC
                    &&(!IS_HDMI_FREESYNC() && !IS_DP_FREESYNC())
              #endif
1486   2          )
1487   2              {
1488   3      
1489   3                  MODE_printMsg( "Not Found--> not support" );
1490   3      
1491   3                  SrcFlags |= bUnsupportMode;
1492   3              }
1493   2          #if 0//!ENABLE_HDMI
                      else if(CURRENT_SOURCE_IS_INTERLACE_MODE())
                      {
                          MODE_printMsg( "Interlace --> not support" );
                          SrcFlags |= bUnsupportMode;
                      }
                  #endif
1500   2              else   // found
1501   2              {
1502   3                      MODE_printData("  ucSimilarTimingNums:%d", ucSimilarTimingNums);
1503   3                      MODE_printData("  SrcModeIndex:%d", SrcModeIndex);
1504   3                      MODE_printData("  StandardModeWidth:%d", StandardModeWidth);
1505   3                      MODE_printData("  StandardModeHeight:%d", StandardModeHeight);
1506   3              }
1507   2      
1508   2          } // search mode index
1509   1      
1510   1          return TRUE;
1511   1      }
1512          #endif
1513          
1514          
1515          
1516          
1517          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2235    ----
   CONSTANT SIZE    =   1831    ----
   XDATA SIZE       =     11       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      37
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
